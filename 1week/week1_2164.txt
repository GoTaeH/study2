1. 문제 해결 기법
    - 1부터 N까지 놓여있는 N장의 카드중 맨 위인 1을 버리고 그다음 맨 위에 있는 카드를 가장 아래로 옮기는 것을 
    반복하여 마지막에 남은 카드를 구하는 문제이다. 즉, 한 쪽으로는 카드를 빼야하고(삭제), 다른 한쪽으로는 카드를 넣어야 한다.(삭제)
    따라서 한 쪽은 삭제만, 다른 한 쪽은 삽입만 하는 큐(Queue)를 사용해야 한다.

2. 논리 구현
타입이 Integer인 큐를 선언한다.
Scanner를 선언한다.
카드 수를 정의하는 int N을 정의하고, Scanner로 새로운 int를 입력 받는다. (int N = sc.nextInt())

for 반복문을 통해 1부터 N이 될 때까지 다음을 반복한다. (i <- 1 ~ N)
    큐에 1부터 N까지 넣는다. (queue.offer(i))

while 반복문을 통해 큐의 크기가 1이 아닌 동안 다음을 반복한다.
    큐에서 가장 위에 있는 값을 삭제한다. (queue.poll())
    큐에서 가장 위에 있는 값을 삭제 및 반환하여 그 값을 다시 넣는다. (queue.offer(queue.poll()))

큐에 있는 값을 출력한다. (queue.peek())