1. 문제 해결 기법
    - 서로 다른 가치를 가진 n가지의 동전을 적당히 사용해서 k원이 되도록하는 경우의 수를 구하는 문제이다.
    따라서 k원이 되는 경우를 찾으면 카운트를 증가하고 이를 기억하여 경우의 수를 구해야한다. 즉, 다이나믹 프로그래밍을
    활용해야 한다.

2. 논리 구현
버퍼 리더 br을 선언한다.
StringTokenizer st를 선언한다.
타입이 int인 n을 토큰으로 입력 받는다.
타입이 int인 k를 토큰으로 입력 받는다.
타입이 int인 1차원 배열 arr을 크기 n+1로 설정한다.
타입이 intdls 1차원 배열 dp를 크기 k+1로 설정한다.
dp의 0번째를 1로 정의한다.

for 반복문을 통해 다음을 반복한다. (int i <- 0~n-1)
    arr[i]을 br.readLine()으로 입력받는다.
    for 반복문을 통해 다음을 반복한다. (int j <- arr[i]~k)
        dp[j]에 dp[j-arr[i]]를 더한다.

dp[k]를 출력한다.