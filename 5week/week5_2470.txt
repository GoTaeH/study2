1. 문제 해결 기법
    - 양의 정수인 특성값을 가지는 산성 용액과 음의 정수인 특성값을 가지는 알칼리성 용액을 N개 만큼 입력 받아 
    각 용액의 특성값 합으로 0에 가장 가까운 용액을 찾는 문제이다. 이 문제는 두 용액을 합해서 비교해야 하는 문제이다. 
    따라서 투포인터를 사용하여 정렬된 배열에서 포인터를 옮겨가며 0에 가장 가까운 용액 두가지를 찾는다.

2. 논리 구현
버퍼리더 br을 선언한다.
타입이 int인 N을 선언하여 입력 받는다.  // 전체 용액의 수

1차원 배열 int[] arr을 크기 N으로 정의한다. // 정렬하기 위한 배열 생성
StringTokenizer st를 선언한다.

for 반복문으로 다음을 반복한다. (int i <- 0~N-1)
    arr[i]에 st.nextToken()을 넣는다.   // int 타입

1차원 배열 int[] res를 크기 2로 정의한다.   // 결과 출력 배열
타입이 int인 start를 0으로 정의한다.    // 왼쪽 포인터
타입이 int인 end를 N - 1로 정의한다.    // 오른쪽 포인터
타입이 int인 min을 MAX_VALUE로 정의한다.
arr배열을 정렬한다. // Arrays.sort()

while 문으로 다음을 동작한다. (start < end)
    int sum을 arr[start] + arr[end]로 정의한다. // 어떤 두 용액의 특정값 합
    if(min > Math.abs(sum))     // 가장 큰 값이 sum의 절대값보다 크다면
        res[0] = arr[start]
        res[1] = arr[end]

        if(sum == 0) break; // 두 용액의 합이 0이라면
    if(sum < 0) start++ // 합이 0보다 작다면 왼쪽 포인터 이동
    else    end--   // 오른쪽 포인터를 왼쪽으로 이동
res[0] + " " + res[1]을 출력한다.