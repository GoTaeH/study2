1. 문제 해결 기법
    - 자연수 N과 M이 주어지면 조건을 만족하는 길이가 M인 수열을 모두 구하는 문제이다. 
    // 조건 : 1부터 N까지 M개 고른 수열, 같은 수 여러 번 가능, 고른 수열은 비내림차순
    이 문제는 1부터 시작해서 오답을 만나면 돌아가서 다음 경우를 찾는 백트래킹을 활용하여 
    해결해야 한다. 백트래킹은 깊이 우선 탐색을 바탕으로 하여 구현할 수 있다.

2. 논리 구현
static int N, M , int[] arr, boolean[] visited, StringBuilder sb를 선언한다.
// main
버퍼리더 br을 선언한다.
StringTokenizer st를 선언하여 br.readLine()으로 읽어들인다.
N을 st.nextToken()으로 정의한다.
M을 st.nextToken()으로 정의한다.
visited를 크기 N인 1차원 boolean 배열로 생성한다.
arr을 크기 M인 1차원 int 배열로 생성한다.
backTracking(0, 0)을 실행한다.
sb를 출력한다.

// private static void backTracking(int d, int s)  d=depth, s=start
if(d값이 길이(M)와 같을 때)
    for 반복문으로 다음을 반복한다. (int i <- 0~arr.length)
        sb에 arr[i] + " "를 넣는다.
    sb에 "\n"을 넣는다.
    return
for 반복문으로 다음을 반복한다. (int i <- s~N-1) // 백트래킹으로 수열의 값을 배열에 저장
    visited[i] = true
    arr[d] = i + 1
    backTracking(d + 1, i)
    visited[i] = false