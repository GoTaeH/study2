1. 문제 해결 기법
    - 파도반 수열(나선에 있는 정삼각형의 변의 길이, P(N))를 구하는 문제로, N을 입력 받아 P(N)을 구하는 문제이다. 
    파도반 수열을 구하기 위해서는 각 정삼각형의 가장 긴 변의 길이 k를 저장해가며 N개 만큼 계속해야하므로, dp를 활용해야 한다. 
    그리고 테스트 케이스 개수 T가 주어지므로, T 모두 각각 dp를 활용하여 풀어야 한다.
    // 파도반 수열 : P(N) = P(N-2) + P(N-3) (예: P(10) = 1, 1, 1, 2, 2, 3, 4, 5, 7, 9 <- 9=5+4)

2. 논리 구현
long 타입의 배열 s를(메모이제이션 하기 위한 배열) 101 크기로 지정한다. // 1 <= N <= 100

public static void main(String[] args) throws IOException {
    입력을 위해 버퍼리더 br을 정의한다.
    속도가 느려지는 것을 막기 위해 StringBuffer sb를 정의한다.

    P(파도반)메소드를 실행한다.
    타입이 int인 T를 입력받는다.

    for 반복문으로 다음을 반복한다. (int i <- 0~T-1) // 테스트 케이스 T번 만큼 반복
        sb.append(값) // sb뒤에 값 붙인다. 값은 s[Integer.parseInt(br.readLine())] : 즉, N

    sb를 출력한다.

    // P() 메소드
    //첫번째부터 세번째 삼각형까지는 가장 긴 변의 길이가 1이므로 정의를 해준다.
    s[1] = 1;
    s[2] = 1;
    s[3] = 1;

    for 반복문으로 다음을 반복한다. (int i <- 4~100)
        s[i] = s[i-2] + s[i-3]; // 파도반 수열 구하는 공식
}